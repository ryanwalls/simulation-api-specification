swagger: "2.0"
info:
  version: 1.0.1
  title: Simulation API
  description: An API for managing simulations within 3DSIM.
  termsOfService: https://3dsim.com
  contact:
    name: 3DSIM API Team
    email: support@3dsim.com
    url: https://3dsim.github.io
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: 3dsim.cloud.tyk.io
basePath: /simulation-api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /status:
    get:
      description: |
        Use this endpoint to check server status.
      operationId: status
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/Status'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /materials:
    get:
      description: Get list of materials
      operationId: getMaterials
      parameters:
        - name: organizationId
          in: query
          description: the organization id to get items for.  Must be provided as API callers only have access to items
            belonging to their organization.
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: starting paging count; ex. 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: archived
          in: query
          description: If true, will only return archived items.  If false, will only return unarchived items.  If not
            provided, will return both archived and unarchived items.
          required: false
          type: boolean
      responses:
        "200":
          description: Successfully retrieved list
          schema:
            type: array
            items:
              $ref: '#/definitions/Material'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:materials
    post:
      description: Creates a new material for the organizationId specified
      operationId: addMaterial
      parameters:
        - name: material
          in: body
          description: Material to add
          required: true
          schema:
            $ref: '#/definitions/Material'
      responses:
        "200":
          description: material response
          schema:
            $ref: '#/definitions/Material'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:materials

  /materials/{id}:
    get:
      description: Returns a material based on a single ID
      operationId: getMaterial
      parameters:
        - name: id
          in: path
          description: ID of material to fetch
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: material response
          schema:
            $ref: '#/definitions/Material'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Material not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:materials

  /materials/{id}/archive:
    put:
      description: archives a single material based on the ID supplied
      operationId: archiveMaterial
      parameters:
        - name: id
          in: path
          description: ID of material to archived
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: material that has been archived with active field cleared
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Material not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:materials

  /machines:
    get:
      description: Get list of machines
      operationId: getMachines
      parameters:
        - name: organizationId
          in: query
          description: the organization id to get items for.  Must be provided as API callers only have access to items
            belonging to their organization.
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: starting paging count; ex. 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: archived
          in: query
          description: If true, will only return archived parts.  If false, will only return unarchived parts.  If not
            provided, will return both archived and unarchived parts.
          required: false
          type: boolean
      responses:
        "200":
          description: Successfully retrieved list of machines
          schema:
            type: array
            items:
              $ref: '#/definitions/Machine'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:machines

    post:
      description: Add a machine
      operationId: postMachine
      parameters:
      - name: machine
        in: body
        required: true
        schema:
          $ref: '#/definitions/Machine'
      responses:
        "200":
          description: Machine was successfully added.
          schema:
            $ref: '#/definitions/Machine'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:machines

  /machines/{id}:
    get:
      description: Get a machine
      operationId: getMachine
      parameters:
      - name: id
        in: path
        description: machine identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Successfully retrieved the requested machine
          schema:
            $ref: '#/definitions/Machine'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Machine not found (id invalid)
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:machines

    put:
      description: Update a machine
      operationId: putMachine
      parameters:
        - name: id
          in: path
          description: machine identifier
          required: true
          type: integer
          format: int32
        - name: machine
          in: body
          required: true
          schema:
            $ref: '#/definitions/Machine'
      responses:
        "200":
          description: Machine was successfully updated.
          schema:
            $ref: '#/definitions/Machine'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Machine not found (id invalid)
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:machines

  /machines/{id}/archive:
    put:
      description: Archive a machine, making it not available for use in a simulation (sets archived property to true)
      operationId: archiveMachine
      parameters:
      - name: id
        in: path
        description: machine identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Machine was successfully archived.
          schema:
            $ref: '#/definitions/Machine'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Machine not found (id invalid)
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:machines

  /machines/{id}/unarchive:
    put:
      description: Unarchive a machine, making it available for use in a simulation (sets archived property to false)
      operationId: unarchiveMachine
      parameters:
      - name: id
        in: path
        description: machine identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Machine was successfully unarchived.
          schema:
            $ref: '#/definitions/Machine'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Machine not found (id invalid)
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:machines

  /parts:
    get:
      description: Get list of parts
      operationId: getParts
      parameters:
        - name: organizationId
          in: query
          description: the organization id to get items for.  Must be provided as API callers only have access to items
            belonging to their organization.
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: starting paging count; ex. 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: availability
          in: query
          description: If specified, will filter to only include parts with the given availability.  Uploaded - the part has been uploaded.  Processing - the part
            is being processed.  Available - the part was processed successfully and can be used in simulations.  Error -
            an error occurred, contact support@3dsim.com.
          required: false
          type: string
          enum:
            - Uploaded
            - Processing
            - Available
            - Error
        - name: archived
          in: query
          description: If true, will only return archived parts.  If false, will only return unarchived parts.  If not
            provided, will return both archived and unarchived parts.
          required: false
          type: boolean
      responses:
        "200":
          description: Successfully found the list of parts
          schema:
            type: array
            items:
              $ref: '#/definitions/Part'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:parts
    post:
      description: Adds a part and starts processing the part.  When processing is finished, the "availability" field
        for the part will change to "Available".  See GET /parts.
      operationId: addParts
      parameters:
        - name: Part
          in: body
          description: Part to add. First, call parts/geometryurl to get a PartUploadRequest object.
            PUT the STL file AmazonS3 with the signed URL. Use the s3Key property as the value of fileLocation.
            A POST with this object will execute the part processing service.
          required: true
          schema:
            $ref: '#/definitions/PartPost'
      responses:
        "200":
          description: Successfully added a part
          schema:
            $ref: '#/definitions/Part'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:parts
    put:
      description: Updates a Part
      operationId: UpdatePart
      parameters:
        - name: Part
          in: body
          description: Part to update.
          required: true
          schema:
            $ref: '#/definitions/Part'
      responses:
        "200":
          description: Successfully updated a part
          schema:
            $ref: '#/definitions/Part'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:parts

  /parts/geometryuploadurl:
    get:
      description: Gets a time sensitive URL to upload a geometry file to AmazonS3.
      operationId: getNewPartGeometryUploadUrl
      responses:
        "200":
          description: Successfully returns a part geometry url for a new part upload
          schema:
            $ref: '#/definitions/PartUploadRequest'
        "403":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:parts

  /parts/{id}:
    get:
      description: Get a single part by Id
      operationId: getPart
      parameters:
        - name: id
          in: path
          description: ID of part to get
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully found a part
          schema:
            $ref: '#/definitions/Part'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:parts

  /parts/{id}/archive:
    put:
      description: Archive a Part. Archiving a part will set the status to archived and will exclude the part from get list requests. To unarchive a part call /parts/{id}, change the status and then /parts (put) to update.
      operationId: ArchivePart
      parameters:
        - name: id
          in: path
          description: ID of part
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully archived a part
          schema:
            $ref: '#/definitions/Part'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:parts

  /parts/{id}/geometryurl:
    get:
      description: Gets a time sensitive URL to the geometry file stored in AmazonS3.
      operationId: getPartGeometryUrl
      parameters:
        - name: id
          in: path
          description: ID of part
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully returns a part geometry url
          schema:
            $ref: '#/definitions/PartGeometryUrl'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:parts

  /parts/{id}/geometry:
    get:
      description: Gets a list of triangles for the geometry file stored in AmazonS3.
      operationId: getPartGeometry
      parameters:
        - name: id
          in: path
          description: ID of part
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully returns a part geometry triangles
          schema:
            type: array
            items:
              $ref: '#/definitions/Triangle'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:parts

  /simulations:
    get:
      description: Gets a list of all simulations
      operationId: getSimulations
      parameters:
        - name: organizationId
          in: query
          description: the organization id to get items for.  Must be provided as API callers only have access to items
            belonging to their organization.
          required: true
          type: integer
          format: int32
        - name: status
          in: query
          description: simulation status for items retrieved.  If an array of items is sent, they are treated as "OR" operations.
            e.g. status=InProgress,Requested would yield a list of simulations that are in either state.
          required: false
          type: array
          items:
            type: string
            enum:
              - Draft
              - Requested
              - InProgress
              - Cancelled
              - Error
              - Success
        - name: offset
          in: query
          description: starting paging count; ex. offset of 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of materials to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Successfully found the list of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Simulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations

  /simulations/{id}:
    get:
      description: Get a simulation
      operationId: getSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Successfully retrieved simulation
          schema:
            $ref: '#/definitions/Simulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    patch:
      description: Patch a simulation
      operationId: patchSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      - name: simulationPatch
        in: body
        description: This endpoint uses JSON Patch, RFC 6092.
        required: true
        schema:
            type: array
            items:
              $ref: '#/definitions/PatchDocument'
      responses:
        "200":
          description: Successfully patched simulation
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /simulations/{id}/cancel:
    put:
      description: Request a cancellation of a simulation.
      operationId: RequestCancellation
      parameters:
        - name: id
          in: path
          description: ID of part
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully requested cancellation
          schema:
            $ref: '#/definitions/Part'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /simulations/{id}/cancelled:
    put:
      description: Confirms full cancellation of an active simulation.
      operationId: ConfirmCancellation
      parameters:
        - name: id
          in: path
          description: ID of part
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully set status to cancelled
          schema:
            $ref: '#/definitions/Part'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /simulations/{id}/logs:
    get:
      description: Gets a list of all logs for a simulation
      operationId: getSimulationLogs
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: starting paging count; ex. offset of 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Successfully found the list of items
          schema:
            type: array
            items:
              $ref: '#/definitions/SimulationLog'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    post:
      description: Creates a new log entry in the simulation
      operationId: postSimulationLog
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: SimulationLog
          in: body
          description: A log for a simulation
          required: true
          schema:
            $ref: '#/definitions/SimulationLog'
      responses:
        "200":
          description: Successfully added the item
          schema:
            $ref: '#/definitions/SimulationLog'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /simulations/{id}/outputs:
    get:
      description: Gets a list of all outputs for a simulation
      operationId: getSimulationOutputs
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: starting paging count; ex. offset of 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Successfully found the list of items
          schema:
            type: array
            items:
              $ref: '#/definitions/SimulationOutput'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    post:
      description: Creates a new output for the simulation
      operationId: postSimulationOutput
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: SimulationOutput
          in: body
          description: An output for a simulation
          required: true
          schema:
            $ref: '#/definitions/SimulationOutput'
      responses:
        "200":
          description: Successfully added the item
          schema:
            $ref: '#/definitions/SimulationOutput'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /simulations/{id}/activities:
    get:
      description: Gets a list of all activities for a simulation
      operationId: getSimulationActivities
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: starting paging count; ex. offset of 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Successfully found the list of items
          schema:
            type: array
            items:
              $ref: '#/definitions/SimulationActivity'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    post:
      description: Creates a new activity for the simulation
      operationId: postSimulationActivity
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: SimulationActivity
          in: body
          description: An activity for a simulation.  An activity represents the execution of a worker in the simulation pipeline.
          required: true
          schema:
            $ref: '#/definitions/SimulationActivity'
      responses:
        "200":
          description: Successfully added the item
          schema:
            $ref: '#/definitions/SimulationActivity'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /simulations/{id}/activities/{activityId}:
    get:
      description: Gets an activity for a simulation
      operationId: getSimulationActivity
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: activityId
          in: path
          description: activity identifier
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully found the item
          schema:
            $ref: '#/definitions/SimulationActivity'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    put:
      description: Updates an activity for a simulation
      operationId: putSimulationActivity
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: activityId
          in: path
          description: activity identifier
          required: true
          type: integer
          format: int32
        - name: SimulationActivity
          in: body
          description: An activity for a simulation.  An activity represents the execution of a worker in the simulation pipeline.
          required: true
          schema:
            $ref: '#/definitions/SimulationActivity'
      responses:
        "200":
          description: Successfully updated the item
          schema:
            $ref: '#/definitions/SimulationActivity'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /porositysimulations:
    get:
      description: Gets a list of all porosity simulation
      operationId: getPorositySimulations
      parameters:
        - name: organizationId
          in: query
          description: the organization id to get items for.  Must be provided as API callers only have access to items
            belonging to their organization.
          required: true
          type: integer
          format: int32
        - name: status
          in: query
          description: simulation status for items retrieved.  If an array of items is sent, they are treated as "OR" operations.
            e.g. status=InProgress,Requested would yield a list of simulations that are in either state.
          required: false
          type: array
          items:
            type: string
            enum:
              - Draft
              - Requested
              - InProgress
              - Cancelled
              - Error
              - Success
        - name: offset
          in: query
          description: starting paging count; ex. offset of 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of materials to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Successfully found the list of items
          schema:
            type: array
            items:
              $ref: '#/definitions/PorositySimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    post:
      description: Posts a new porosity simulation
      operationId: postPorositySimulation
      parameters:
        - name: PorositySimulation
          in: body
          description: PorositySimulation fields required to add the simulation
          required: true
          schema:
            $ref: '#/definitions/PorositySimulation'
      responses:
        "200":
          description: Successfully added a simulation
          schema:
            $ref: '#/definitions/PorositySimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /porositysimulations/{id}:
    get:
      description: Get a porosity simulation
      operationId: getPorositySimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Successfully retrieved simulation
          schema:
            $ref: '#/definitions/PorositySimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    put:
      description: Puts an updated porosity simulation
      operationId: putPorositySimulation
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: PorositySimulation
          in: body
          description: PorositySimulation fields required to update a simulation
          required: true
          schema:
            $ref: '#/definitions/PorositySimulation'
      responses:
        "200":
          description: Successfully updated a simulation
          schema:
            $ref: '#/definitions/PorositySimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /porositysimulations/{id}/cancel:
    put:
      description: Cancels a porosity simulation
      operationId: cancelPorositySimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully cancelled.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations
  /porositysimulations/{id}/start:
    put:
      description: Starts a porosity simulation.  If the simulation has been started before, start requests have no effect.
      operationId: startPorositySimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully started.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /singlebeadsimulations:
    get:
      description: Gets a list of all single bead simulations for the active user
      operationId: getSingleBeadSimulations
      parameters:
        - name: organizationId
          in: query
          description: the organization id to get items for.  Must be provided as API callers only have access to items
            belonging to their organization.
          required: true
          type: integer
          format: int32
        - name: status
          in: query
          description: simulation status for items retrieved.  If an array of items is sent, they are treated as "OR" operations.
            e.g. status=InProgress,Requested would yield a list of simulations that are in either state.
          required: false
          type: array
          items:
            type: string
            enum:
              - Draft
              - Requested
              - InProgress
              - Cancelled
              - Error
              - Success
        - name: offset
          in: query
          description: starting paging count; ex. offset of 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Successfully found the list of items
          schema:
            type: array
            items:
              $ref: '#/definitions/SingleBeadSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    post:
      description: Posts a new single bead simulation
      operationId: postSingleBeadSimulation
      parameters:
        - name: SingleBeadSimulation
          in: body
          description: SingleBeadSimulation fields required to add the simulation
          required: true
          schema:
            $ref: '#/definitions/SingleBeadSimulation'
      responses:
        "200":
          description: Successfully added a simulation
          schema:
            $ref: '#/definitions/SingleBeadSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /singlebeadsimulations/{id}:
    get:
      description: Get a single bead simulation
      operationId: getSingleBeadSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Successfully retrieved simulation
          schema:
            $ref: '#/definitions/SingleBeadSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    put:
      description: Puts an updated single bead simulation
      operationId: putSingleBeadSimulation
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: SingleBeadSimulation
          in: body
          description: SingleBeadSimulation fields required to update a simulation
          required: true
          schema:
            $ref: '#/definitions/SingleBeadSimulation'
      responses:
        "200":
          description: Successfully updated a simulation
          schema:
            $ref: '#/definitions/SingleBeadSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /singlebeadsimulations/{id}/cancel:
    put:
      description: Cancels a single bead simulation
      operationId: cancelSingleBeadSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully cancelled.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /singlebeadsimulations/{id}/start:
    put:
      description: Starts a single bead simulation.  If the simulation has been started before, start requests have no effect.
      operationId: startSingleBeadSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully started.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /thermalsimulations:
    get:
      description: Gets a list of all thermal simulations for the active user
      operationId: getThermalSimulations
      parameters:
        - name: organizationId
          in: query
          description: the organization id to get items for.  Must be provided as API callers only have access to items
            belonging to their organization.
          required: true
          type: integer
          format: int32
        - name: status
          in: query
          description: simulation status for items retrieved.  If an array of items is sent, they are treated as "OR" operations.
            e.g. status=InProgress,Requested would yield a list of simulations that are in either state.
          required: false
          type: array
          items:
            type: string
            enum:
              - Draft
              - Requested
              - InProgress
              - Cancelled
              - Error
              - Success
        - name: offset
          in: query
          description: starting paging count; ex. offset of 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Successfully found the list of items
          schema:
            type: array
            items:
              $ref: '#/definitions/ThermalSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    post:
      description: Posts a new thermal simulation
      operationId: postThermalSimulation
      parameters:
        - name: ThermalSimulation
          in: body
          description: ThermalSimulation fields required to add a simulation
          required: true
          schema:
            $ref: '#/definitions/ThermalSimulation'
      responses:
        "200":
          description: Successfully added a simulation
          schema:
            $ref: '#/definitions/ThermalSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /thermalsimulations/{id}:
    get:
      description: Get a thermal simulation
      operationId: getThermalSimulation
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieved simulation
          schema:
            $ref: '#/definitions/ThermalSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    put:
      description: Puts an updated thermal simulation
      operationId: putThermalSimulation
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: ThermalSimulation
          in: body
          description: ThermalSimulation fields required to update a simulation
          required: true
          schema:
            $ref: '#/definitions/ThermalSimulation'
      responses:
        "200":
          description: Successfully updated a simulation
          schema:
            $ref: '#/definitions/ThermalSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /thermalsimulations/{id}/cancel:
    put:
      description: Cancels a thermal simulation
      operationId: cancelThermalSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully cancelled.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /thermalsimulations/{id}/start:
    put:
      description: Starts a thermal simulation.  If the simulation has been started before, start requests have no effect.
      operationId: startThermalSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully started.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /scanpatternsimulations:
    get:
      description: Gets a list of all scan pattern simulations for the active user
      operationId: getScanPatternSimulations
      parameters:
        - name: organizationId
          in: query
          description: the organization id to get items for.  Must be provided as API callers only have access to items
            belonging to their organization.
          required: true
          type: integer
          format: int32
        - name: status
          in: query
          description: simulation status for items retrieved.  If an array of items is sent, they are treated as "OR" operations.
            e.g. status=InProgress,Requested would yield a list of simulations that are in either state.
          required: false
          type: array
          items:
            type: string
            enum:
              - Draft
              - Requested
              - InProgress
              - Cancelled
              - Error
              - Success
        - name: offset
          in: query
          description: starting paging count; ex. offset of 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Successfully found the list of items
          schema:
            type: array
            items:
              $ref: '#/definitions/ScanPatternSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    post:
      description: Posts a new scan pattern simulation
      operationId: postScanPatternSimulation
      parameters:
        - name: ScanPatternSimulation
          in: body
          description: ScanPatternSimulation fields required to add a simulation
          required: true
          schema:
            $ref: '#/definitions/ScanPatternSimulation'
      responses:
        "200":
          description: Successfully added a simulation
          schema:
            $ref: '#/definitions/ScanPatternSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /scanpatternsimulations/{id}:
    get:
      description: Get a Scan Pattern simulation
      operationId: getScanPatternSimulation
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully retrieved simulation
          schema:
            $ref: '#/definitions/ScanPatternSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    put:
      description: Puts an updated scan pattern simulation
      operationId: putScanPatternSimulation
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: ScanPatternSimulation
          in: body
          description: ScanPatternSimulation fields required to update a simulation
          required: true
          schema:
            $ref: '#/definitions/ScanPatternSimulation'
      responses:
        "200":
          description: Successfully updated a simulation
          schema:
            $ref: '#/definitions/ScanPatternSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /scanpatternsimulations/{id}/cancel:
    put:
      description: Cancels a Scan Pattern simulation
      operationId: cancelScanPatternSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully cancelled.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /scanpatternsimulations/{id}/start:
    put:
      description: Starts a Scan Pattern simulation.  If the simulation has been started before, start requests have no effect.
      operationId: startScanPatternSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully started.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /assumedstrainsimulations:
    get:
      description: Gets a list of all assumed strain simulations for the active user
      operationId: getAssumedStrainSimulations
      parameters:
        - name: organizationId
          in: query
          description: the organization id to get items for.  Must be provided as API callers only have access to items
            belonging to their organization.
          required: true
          type: integer
          format: int32
        - name: status
          in: query
          description: simulation status for items retrieved.  If an array of items is sent, they are treated as "OR" operations.
            e.g. status=InProgress,Requested would yield a list of simulations that are in either state.
          required: false
          type: array
          items:
            type: string
            enum:
              - Draft
              - Requested
              - InProgress
              - Cancelled
              - Error
              - Success
        - name: offset
          in: query
          description: starting paging count; ex. offset of 60 will skip the first 60 items in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of items to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders.  e.g. sort=key1:desc,key2:asc
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Successfully found the list of items
          schema:
            type: array
            items:
              $ref: '#/definitions/AssumedStrainSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    post:
      description: Posts a new assumed strain simulation
      operationId: postAssumedStrainSimulation
      parameters:
        - name: AssumedStrainSimulation
          in: body
          description: AssumedStrainSimulation fields required to add a simulation
          required: true
          schema:
            $ref: '#/definitions/AssumedStrainSimulation'
      responses:
        "200":
          description: Successfully added a simulation
          schema:
            $ref: '#/definitions/AssumedStrainSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /assumedstrainsimulations/{id}:
    get:
      description: Get a assumed strain simulation
      operationId: getAssumedStrainSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Successfully retrieved simulation
          schema:
            $ref: '#/definitions/AssumedStrainSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations
    put:
      description: Puts an updated assumed strain simulation
      operationId: putAssumedStrainSimulation
      parameters:
        - name: id
          in: path
          description: simulation identifier
          required: true
          type: integer
          format: int32
        - name: AssumedStrainSimulation
          in: body
          description: AssumedStrainSimulation fields required to update a simulation
          required: true
          schema:
            $ref: '#/definitions/AssumedStrainSimulation'
      responses:
        "200":
          description: Successfully updated a simulation
          schema:
            $ref: '#/definitions/AssumedStrainSimulation'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /assumedstrainsimulations/{id}/cancel:
    put:
      description: Cancels a assumed strain simulation
      operationId: cancelAssumedStrainSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully cancelled.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations

  /assumedstrainsimulations/{id}/start:
    put:
      description: Starts an assumed strain simulation.  If the simulation has been started before, start requests have no effect.
      operationId: startAssumedStrainSimulation
      parameters:
      - name: id
        in: path
        description: simulation identifier
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: Simulation was successfully started.
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Simulation not found (id invalid)
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - write:simulations
  /assumedstrainsimulations/{id}/estimate:
    get:
      description: Get an estimate, in minutes, for running an assumed strain simulation for the selected part and specified voxel size.
      operationId: AssumedStrainEstimate
      parameters:
        - name: id
          in: path
          description: ID of simulation
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Successfully estimated time for assumed strain simulation
          schema:
            $ref: '#/definitions/SimulationEstimate'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - simulationSecurity:
          - read:simulations

securityDefinitions:
  simulationSecurity:
    type: oauth2
    authorizationUrl: https://3dsim.auth0.com/authorize
    flow: implicit
    scopes:
      write:simulations: create and update simulations
      read:simulations: read simulations
      write:parts: create and update parts
      read:parts: read parts
      write:machines: create and update machines
      read:machines: read machines
      write:materials: create and update materials
      read:materials: read materials

definitions:
  SimulationActivity:
    type: object
    required:
      - simulationId
      - activityId
      - activityName
      - workerVersion
    properties:
      id:
        type: integer
        format: int32
      simulationId:
        type: integer
        format: int32
        description: id of associated simulation, set server-side, read-only
      activityId:
        type: string
        description: the Amazon SWF activity id
      activityName:
        type: string
        description: the name of the Amazon SWF activity
      workerVersion:
        type: string
        description: the version of the worker, e.g. 1.9.0
      startedAt:
        type: string
        format: date-time
        description: started time stamp
      completedAt:
        type: string
        format: date-time
        description: completed time stamp
        x-nullable: true
      status:
        type: string
        description: status of the activity
        enum:
          - Waiting
          - Running
          - Cancelled
          - Error
          - Finished

  SimulationOutput:
    type: object
    required:
     - label
     - fileLocation
     - createdAt
    properties:
      id:
        type: integer
        format: int32
        description: id of associated simulation, set server-side, read-only
      simulationId:
        type: integer
        format: int32
      createdAt:
        type: string
        format: date-time
        description: created time stamp
      label:
        type: string
        description: User readable label of what the output contains
      fileLocation:
        type: string
        description: Location of file, usually an S3 location

  SimulationPart:
    type: object
    description: "As-run part related parameters used for a simulation. If the part field is included in a Simulation PUT or POST, it will not be updated."
    required:
      - partId
      - simulationId
      - xMin
      - yMin
      - zMin
    properties:
      id:
        type: integer
        format: int32
      partId:
        description: "ID of the associated part"
        type: integer
        format: int32
      part:
        $ref: "#/definitions/Part"
      simulationId:
        description: "ID of the associated simulation"
        type: integer
        format: int32
      xMin:
        description: "Smallest x coordinate of the part location on the powder bed in millimeters. The center of the powder bed in the x dimension is assumed to be 0"
        type: number
        minimum: -125
        maximum: 125
        exclusiveMinimum: false
        exclusiveMaximum: false
      yMin:
        description: "Smallest y coordinate of the part location on the powder bed in millimeters. The center of the powder bed in the y dimension is assumed to be 0"
        type: number
        minimum: -125
        maximum: 125
        exclusiveMinimum: false
        exclusiveMaximum: false
      zMin:
        description: "Not used at present. This must be set to 0"
        type: number
        minimum: 0
        maximum: 0
        exclusiveMinimum: false
        exclusiveMaximum: false

  SimulationLog:
    type: object
    required:
      - message
      - loggedAt
    properties:
      id:
        type: integer
        format: int32
      simulationId:
        type: integer
        format: int32
        description: id of associated simulation, set server-side, read-only
      loggedAt:
        type: string
        format: date-time
        description: time stamp of log
      message:
        type: string
      level:
        type: string
        description: level of the log
        enum:
          - Info
          - Trace
          - Error
          - Warn
      activityId:
        type: string
        description: the Amazon SWF activity id 

  Status:
    required:
      - status
    properties:
      status:
        type: string
        enum:
          - okay
          - problem
          - slow
      message:
        type: string

  Simulation:
    type: object
    required:
      - title
      - organizationId
    properties:
      id:
        type: integer
        format: int32
      type:
        type: string
        enum:
          - SingleBeadSimulation
          - ThermalSimulation
          - PorositySimulation
          - AssumedStrainSimulation
          - ScanPatternSimulation
      organizationId:
        type: integer
        format: int32
      title:
        type: string
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      status:
        type: string
        enum:
          - Draft
          - Requested
          - InProgress
          - Cancelled
          - Error
          - Success
      archived:
        type: boolean
        description: True if simulation has been archived, false otherwise
      materialId:
        type: integer
        format: int32
        description: ID of the material to use in the simulation
      materialConfigurationId:
        type: integer
        format: int32
        description: ID of the material configuration that was used in the simulation, set server-side, read only
      machineId:
        type: integer
        format: int32
        description: ID of the machine to use in the simulation
      machineConfigurationId:
        type: integer
        format: int32
        description: ID of the machine configuration that was used in the simulation, set server-side, read only
      started:
        type: string
        format: date-time
        description: time stamp, set server-side, read only
      startedBy:
        type: string
        description: set server-side, read only
      completed:
        type: string
        format: date-time
        description: time stamp, set server-side, read only
      percentComplete:
        type: number
        description: set server-side, read only
      created:
        type: string
        format: date-time
        description: created time stamp, set server-side, read only
      createdBy:
        type: string
        description: assigned user, set server-side, read only
      lastModified:
        type: string
        format: date-time
        description: last modified time stamp, set server-side, read only
      lastModifiedBy:
        type: string
        description: assigned user, set server-side, read only

  PorositySimulationParameters:
    required:
      - geometryWidth
      - geometryLength
      - geometryHeight
      - startingLayerAngle
      - layerRotationAngle
      - layerThicknessValues
      - laserWattageValues
      - scanSpeedValues
      - hatchSpacingValues
      - slicingStripeWidthValues
      - originXValues
      - originYValues
    properties:
      geometryWidth:
        description: Must be between 0.001 to 0.01 meters
        type: number
        minimum: 0.001
        maximum: 0.01
        exclusiveMinimum: false
        exclusiveMaximum: false
      geometryLength:
        description: Must be between 0.001 to 0.01 meters
        type: number
        minimum: 0.001
        maximum: 0.01
        exclusiveMinimum: false
        exclusiveMaximum: false
      geometryHeight:
        description: Must be between 0.001 to 0.01 meters
        type: number
        minimum: 0.001
        maximum: 0.01
        exclusiveMinimum: false
        exclusiveMaximum: false
      startingLayerAngle:
        description: Must be between 0 to 180 degrees
        type: number
        minimum: 0
        maximum: 180
        exclusiveMinimum: false
        exclusiveMaximum: false
      layerRotationAngle:
        description: Must be between 0 to 180 degrees
        type: number
        minimum: 0
        maximum: 180
        exclusiveMinimum: false
        exclusiveMaximum: false
      layerThicknessValues:
        description: Array of layer thickness values to simulate across, Each value must be between 0.00001 to 0.0001 meters
        type: array
        items:
          type: number
          minimum: 0.00001
          maximum: 0.0001
          exclusiveMinimum: false
          exclusiveMaximum: false
      laserWattageValues:
        description: Array of laser power values to simulate across, Each value must be between 10 to 1000 watts
        type: array
        items:
          type: number
          minimum: 10
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      scanSpeedValues:
        description: Array of scan speed values to simulate across, Each value must be between 0.01 to 10 meters/second
        type: array
        items:
          type: number
          minimum: 0.01
          maximum: 10
          exclusiveMinimum: false
          exclusiveMaximum: false
      hatchSpacingValues:
        description: Array of hatch spacing values to simulate across, Each value must be between 0.00001 to 0.001 meters
        type: array
        items:
          type: number
          minimum: 0.00001
          maximum: 0.001
          exclusiveMinimum: false
          exclusiveMaximum: false
      slicingStripeWidthValues:
        description: Array of slicing strip width values to simulate across, Each value must be between 0.001 to 0.1 meters
        type: array
        items:
          type: number
          minimum: 0.001
          maximum: 0.1
          exclusiveMinimum: false
          exclusiveMaximum: false
      originXValues:
        description: Array of origin x values to simulate across, Each value must be between 0 to 0.2 meters
        type: array
        items:
          type: number
          minimum: 0
          maximum: 0.2
          exclusiveMinimum: false
          exclusiveMaximum: false
      originYValues:
        description: Array of origin y values to simulate across, Each value must be between 0 to 0.2 meters
        type: array
        items:
          type: number
          minimum: 0
          maximum: 0.2
          exclusiveMinimum: false
          exclusiveMaximum: false

  PorositySimulation:
    allOf:
      - $ref: "#/definitions/Simulation"
      - $ref: "#/definitions/PorositySimulationParameters"

  SingleBeadSimulationParameters:
    required:
      - beadLength
      - layerThickness
      - laserWattageValues
      - scanSpeedValues
      - powderThermalConductivityValues
      - powderPackingDensityValues
      - meanFreePathInPowderValues
      - meanFreePathInSolidValues
      - laserAbsorptivityInPowderValues
      - laserAbsorptivityInSolidValues
      - solidusTemperatureValues
      - liquidusTemperatureValues
    properties:
      beadLength:
        description: Must be between 0.001 to 0.01 meters
        type: number
        minimum: 0.001
        maximum: 0.01
        exclusiveMinimum: false
        exclusiveMaximum: false
      layerThickness:
        description: Must be between 0.00001 to 0.0001 meters
        type: number
        minimum: 0.00001
        maximum: 0.0001
        exclusiveMinimum: false
        exclusiveMaximum: false
      laserWattageValues:
        description: Array of laser power values to simulate across, Each value must be between 10 to 1000 watts
        type: array
        items:
          type: number
          minimum: 10
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      scanSpeedValues:
        description: Array of scan speed values to simulate across, Each value must be between 0.01 to 10 meters/second
        type: array
        items:
          type: number
          minimum: 0.01
          maximum: 10
          exclusiveMinimum: false
          exclusiveMaximum: false
      powderThermalConductivityValues:
        description: Array of Powder Thermal Conductivity Percentage Values to simulate across, Each value must be between 0% and 100%, expressed as a decimal
        type: array
        items:
          type: number
          minimum: 0
          maximum: 1
          exclusiveMinimum: false
          exclusiveMaximum: false
      powderPackingDensityValues:
        description: Array of Powder Packing Density Percentage Values to simulate across, Each value must be between 0% and 100%, expressed as a decimal
        type: array
        items:
          type: number
          minimum: 0
          maximum: 1
          exclusiveMinimum: false
          exclusiveMaximum: false
      meanFreePathInPowderValues:
        description: Array of Mean Free Path of Laser in Powder Values to simulate across, Each value must be between 0 and 1.25e5
        type: array
        items:
          type: number
          minimum: 0
          maximum: 125000
          exclusiveMinimum: false
          exclusiveMaximum: false
      meanFreePathInSolidValues:
        description: Array of Mean Free Path of Laser in Solid Values to simulate across, Each value must be between 0 and 1.25e5
        type: array
        items:
          type: number
          minimum: 0
          maximum: 125000
          exclusiveMinimum: false
          exclusiveMaximum: false
      laserAbsorptivityInPowderValues:
        description: Array of Powder Laser Absorptivity Values to simulate across, Each value must be between 0% and 100%, expressed as a decimal
        type: array
        items:
          type: number
          minimum: 0
          maximum: 1
          exclusiveMinimum: false
          exclusiveMaximum: false
      laserAbsorptivityInSolidValues:
        description: Array of Solid Laser Absorptivity Values to simulate across, Each value must be between 0% and 100%, expressed as a decimal
        type: array
        items:
          type: number
          minimum: 0
          maximum: 1
          exclusiveMinimum: false
          exclusiveMaximum: false
      solidusTemperatureValues:
        description: Array of Solidus Temperature Values Values to simulate across
        type: array
        items:
          type: number
      liquidusTemperatureValues:
        description: Array of Liquidus Temperature Values Values to simulate across
        type: array
        items:
          type: number

  SingleBeadSimulation:
    allOf:
      - $ref: "#/definitions/Simulation"
      - $ref: "#/definitions/SingleBeadSimulationParameters"

  AssumedStrainSimulationParameters:
    required:
      - layerThickness
      - hatchSpacing
      - laserWattage
      - scanSpeed
      - supportAngle
      - supportFactorOfSafety
      - minimumWallThickness
      - maximumWallThickness
      - minimumWallDistance
      - maximumWallDistance
      - minimumSupportHeight
      - slicingStripeWidth
      - voxelSize
      - startingLayerAngle
      - layerRotationAngle
      - supportOptimization
      - outputShrinkage
      - assumedStrain
      - anisotropicStrainCoefficientsParallel
      - anisotropicStrainCoefficientsPerpendicular
      - anisotropicStrainCoefficientsZ
      - supportYieldStrength
      - supportYieldStrengthRatio
      - elasticModulus
      - poissonRatio
      - strainScalingFactor
      - stressMode
      - outputDisplacementAfterCutoff
      - detectBladeCrash
      - outputLayerVtk
      - performSupportOptimization
    properties:
      performSupportOptimization:
        type: boolean
      layerThickness:
        description: Must be between 0.00001 to 0.0001 meters
        type: number
        minimum: 0.00001
        maximum: 0.0001
      hatchSpacing:
        description: Must be between 0.00001 to 0.001 meters
        type: number
        minimum: 0.00001
        maximum: 0.001
      laserWattage:
        description: Must be between 10 to 1000 watts
        type: number
        minimum: 10
        maximum: 1000
      scanSpeed:
        description: Must be between 0.01 to 10 meters/second
        type: number
        minimum: 0.01
        maximum: 10
      supportAngle:
        description: Must be between 1 to 89 degrees
        type: number
        minimum: 1
        maximum: 89
      supportFactorOfSafety:
        description: Multiplier for support calculations, Must be between 0.1 to 10
        type: number
        minimum: 0.1
        maximum: 10
      minimumWallThickness:
        description: Must be between 0.00005 to 0.0003 meters, Must be less than maximumWallThickness
        type: number
        minimum: 0.00005
        maximum: 0.0003
      maximumWallThickness:
        description: Must be between 0.00015 to 0.002 meters, Must be greater than minimumWallThickness
        type: number
        minimum: 0.00015
        maximum: 0.002
      minimumWallDistance:
        description: Must be between 0 to 0.0003 meters, Must be less than maximumWallDistance
        type: number
        minimum: 0
        maximum: 0.0003
      maximumWallDistance:
        description: Must be between 0 to 0.003 meters, Must be greater than minimumWallDistance
        type: number
        minimum: 0
        maximum: 0.003
      minimumSupportHeight:
        description: Distance to move the part off the base plate for supports, Must be between 0 to 0.005 meters
        type: number
        minimum: 0
        maximum: 0.005
      slicingStripeWidth:
        description: Must be between 0.001 to 0.1 meters
        type: number
        minimum: 0.001
        maximum: 0.1
      voxelSize:
        description: Must be between 0.00002 to 0.002 meters
        type: number
        minimum: 0.00002
        maximum: 0.002
      startingLayerAngle:
        description: Must be between 0 to 180 degrees
        type: number
        minimum: 0
        maximum: 180
      layerRotationAngle:
        description: Must be between 0 to 180 degrees
        type: number
        minimum: 0
        maximum: 180
      supportOptimization:
        type: boolean
      outputShrinkage:
        type: boolean
      assumedStrain:
        type: number
      anisotropicStrainCoefficientsParallel:
        type: number
      anisotropicStrainCoefficientsPerpendicular:
        type: number
      anisotropicStrainCoefficientsZ:
        type: number
      supportYieldStrength:
        type: number
      supportYieldStrengthRatio:
        type: number
      elasticModulus:
        type: number
      poissonRatio:
        type: number
      strainScalingFactor:
        type: number
      stressMode:
        type: string
        enum:
          - linearElastic
          - j2Plasticity
      outputDisplacementAfterCutoff:
        type: boolean
      detectBladeCrash:
        type: boolean
      bladeCrashThreshold:
        type: number
        description: should be a number between 0.5 and 1.5
      outputLayerVtk:
        type: boolean
        description: if true, mechanics solver output will include a zip file with the stress / distortion state at the end of each voxel layer
      performDistortionCompensation:
        type: boolean
        description: if true, a predistorted STL file will be created using the distortion simulated by the mechanics solver
      distortionScaleFactor:
        type: number
        description: a value that is used to scale the simulated distortion value
      outputSupportsVtk:
        type: boolean
        description: if true, a VTK file of the support structure will be created
      detectSupportFailure:
        type: boolean
      supportFailureThreshold:
        type: number
        description: should be a number between 0.5 and 1.5
      simulationParts:
        description: List of parts to simulate (current limit is one part, imposed by server)
        type: array
        items:
          $ref: "#/definitions/SimulationPart"

  AssumedStrainSimulation:
    allOf:
      - $ref: "#/definitions/Simulation"
      - $ref: "#/definitions/AssumedStrainSimulationParameters"

  ThermalSimulationParameters:
    required:
      - layerThickness
      - hatchSpacing
      - laserWattage
      - scanSpeed
      - supportAngle
      - supportFactorOfSafety
      - minimumWallThickness
      - maximumWallThickness
      - minimumWallDistance
      - maximumWallDistance
      - minimumSupportHeight
      - slicingStripeWidth
      - voxelSize
      - startingLayerAngle
      - layerRotationAngle
      - supportOptimization
      - outputStateMap
      - outputShrinkage
      - supportYieldStrength
      - supportYieldStrengthRatio
      - elasticModulus
      - poissonRatio
      - strainScalingFactor
      - outputDisplacementAfterCutoff
      - stressMode
      - outputThermalVtk
      - detectBladeCrash
      - outputPointThermalHistory
      - outputVirtualSensorData
      - includeStressAnalysis
      - outputLayerVtk
      - anisotropicStrainCoefficientsParallel
      - anisotropicStrainCoefficientsPerpendicular
      - anisotropicStrainCoefficientsZ
      - performSupportOptimization

    properties:
      performSupportOptimization:
        type: boolean
      layerThickness:
        description: Must be between 0.00001 to 0.0001 meters
        type: number
        minimum: 0.00001
        maximum: 0.0001
      hatchSpacing:
        description: Must be between 0.00001 to 0.001 meters
        type: number
        minimum: 0.00001
        maximum: 0.001
      laserWattage:
        description: Must be between 10 to 1000 watts
        type: number
        minimum: 10
        maximum: 1000
      scanSpeed:
        description: Must be between 0.01 to 10 meters/second
        type: number
        minimum: 0.01
        maximum: 10
      supportAngle:
        description: Must be between 1 to 89 degrees
        type: number
        minimum: 1
        maximum: 89
      supportFactorOfSafety:
        description: Multiplier for support calculations, Must be between 0.1 to 10
        type: number
        minimum: 0.1
        maximum: 10
      minimumWallThickness:
        description: Must be between 0.00005 to 0.0003 meters, Must be less than maximumWallThickness
        type: number
        minimum: 0.00005
        maximum: 0.0003
      maximumWallThickness:
        description: Must be between 0.00015 to 0.002 meters, Must be greater than minimumWallThickness
        type: number
        minimum: 0.00015
        maximum: 0.002
      minimumWallDistance:
        description: Must be between 0 to 0.0003 meters, Must be less than maximumWallDistance
        type: number
        minimum: 0
        maximum: 0.0003
      maximumWallDistance:
        description: Must be between 0 to 0.005 meters, Must be greater than minimumWallDistance
        type: number
        minimum: 0
        maximum: 0.005
      minimumSupportHeight:
        description: Distance to move the part off the base plate for supports, Must be between 0 to 0.005 meters
        type: number
        minimum: 0
        maximum: 0.005
      slicingStripeWidth:
        description: Must be between 0.001 to 0.1 meters
        type: number
        minimum: 0.001
        maximum: 0.1
      voxelSize:
        description: Must be between 0.00002 to 0.002 meters
        type: number
        minimum: 0.00002
        maximum: 0.002
      startingLayerAngle:
        description: Must be between 0 to 180 degrees
        type: number
        minimum: 0
        maximum: 180
      layerRotationAngle:
        description: Must be between 0 to 180 degrees
        type: number
        minimum: 0
        maximum: 180
      supportOptimization:
        type: boolean
      outputStateMap:
        type: boolean
      outputShrinkage:
        type: boolean
      supportYieldStrength:
        type: number
      supportYieldStrengthRatio:
        type: number
      elasticModulus:
        type: number
      poissonRatio:
        type: number
      strainScalingFactor:
        type: number
      outputDisplacementAfterCutoff:
        type: boolean
      stressMode:
        type: string
        enum:
          - LinearElastic
          - J2Plasticity
      outputThermalVtk:
        type: boolean
      outputThermalVtkLayers:
        type: string
      detectBladeCrash:
        type: boolean
      bladeCrashThreshold:
        type: number
        description: should be a number between 0.5 and 1.5
      outputPointThermalHistory:
        type: boolean
        description: for each slectedPoint, a series of vtk files will output thermal history around that point with a radius of staticVirtualSensorRadius.
      outputVirtualSensorData:
        type: boolean
        description: Outputs meltpool dimensions and thermal history within a VTK file. Thermal history is output as the average temperature within the user-specified dynamicVirtualSensorRadius, centered at the middle of the laser beam.
      staticVirtualSensorRadius:
        type: number
        description: should be a number between 0.05 and 5.0 mm
      dynamicVirtualSensorRadius:
        type: number
        description: should be a number between 0.5 and 1.5 mm
      includeStressAnalysis:
        type: boolean
        description: false indicates that only the thermal solver will run, while true indicates that the mechanics solver will run after the thermal solver
      outputLayerVtk:
        type: boolean
        description: if true, mechanics solver output will include a zip file with the stress / distortion state at the end of each voxel layer
      anisotropicStrainCoefficientsParallel:
        type: number
      anisotropicStrainCoefficientsPerpendicular:
        type: number
      anisotropicStrainCoefficientsZ:
        type: number
      performDistortionCompensation:
        type: boolean
        description: if true, a predistorted STL file will be created using the distortion simulated by the mechanics solver
      distortionScaleFactor:
        type: number
        description: a value that is used to scale the simulated distortion value
      outputSupportsVtk:
        type: boolean
        description: if true, a VTK file of the support structure will be created
      detectSupportFailure:
        type: boolean
      supportFailureThreshold:
        type: number
        description: should be a number between 0.5 and 1.5
      simulationParts:
        description: List of parts to simulate (current limit is one part, imposed by server)
        type: array
        items:
          $ref: "#/definitions/SimulationPart"
      selectedPoints:
        description: List of points where the thermal solver will collect thermal history - limit 10
        type: array
        items:
          $ref: "#/definitions/SelectedPoint"

  ThermalSimulation:
    allOf:
      - $ref: "#/definitions/Simulation"
      - $ref: "#/definitions/ThermalSimulationParameters"

  ScanPatternSimulationParameters:
    required:
      - layerThickness
      - supportAngle
      - supportFactorOfSafety
      - minimumWallThickness
      - maximumWallThickness
      - minimumWallDistance
      - maximumWallDistance
      - minimumSupportHeight
      - voxelSize
      - startingLayerAngle
      - layerRotationAngle
      - outputShrinkage
      - anisotropicStrainCoefficientsParallel
      - anisotropicStrainCoefficientsPerpendicular
      - anisotropicStrainCoefficientsZ
      - supportYieldStrength
      - supportYieldStrengthRatio
      - elasticModulus
      - poissonRatio
      - strainScalingFactor
      - outputDisplacementAfterCutoff
      - performSupportOptimization
      - generateSupportVoxels
      - stressMode
      - detectBladeCrash
      - outputLayerVtk
    properties:
      layerThickness:
        description: Must be between 0.00001 to 0.0001 meters
        type: number
        minimum: 0.00001
        maximum: 0.0001
      supportAngle:
        description: Must be between 1 to 89 degrees
        type: number
        minimum: 1
        maximum: 89
      supportFactorOfSafety:
        description: Multiplier for support calculations, Must be between 0.1 to 10
        type: number
        minimum: 0.1
        maximum: 10
      minimumWallThickness:
        description: Must be between 0.00005 to 0.0003 meters, Must be less than maximumWallThickness
        type: number
        minimum: 0.00005
        maximum: 0.0003
      maximumWallThickness:
        description: Must be between 0.00015 to 0.002 meters, Must be greater than minimumWallThickness
        type: number
        minimum: 0.00015
        maximum: 0.002
      minimumWallDistance:
        description: Must be between 0 to 0.0003 meters, Must be less than maximumWallDistance
        type: number
        minimum: 0
        maximum: 0.0003
      maximumWallDistance:
        description: Must be between 0 to 0.005 meters, Must be greater than minimumWallDistance
        type: number
        minimum: 0
        maximum: 0.005
      minimumSupportHeight:
        description: Distance to move the part off the base plate for supports, Must be between 0 to 0.005 meters
        type: number
        minimum: 0
        maximum: 0.005
      voxelSize:
        description: Must be between 0.00002 to 0.002 meters
        type: number
        minimum: 0.00002
        maximum: 0.002
      startingLayerAngle:
        description: Must be between 0 to 180 degrees
        type: number
        minimum: 0
        maximum: 180
      layerRotationAngle:
        description: Must be between 0 to 180 degrees
        type: number
        minimum: 0
        maximum: 180
      outputShrinkage:
        type: boolean
      anisotropicStrainCoefficientsParallel:
        type: number
      anisotropicStrainCoefficientsPerpendicular:
        type: number
      anisotropicStrainCoefficientsZ:
        type: number
      supportYieldStrength:
        type: number
      supportYieldStrengthRatio:
        type: number
      elasticModulus:
        type: number
      poissonRatio:
        type: number
      strainScalingFactor:
        type: number
      outputDisplacementAfterCutoff:
        type: boolean
      detectBladeCrash:
        type: boolean
      bladeCrashThreshold:
        type: number
        description: should be a number between 0.5 and 1.5
      stressMode:
        type: string
        enum:
          - LinearElastic
          - J2Plasticity
      simulationParts:
        description: List of parts to simulate (current limit is one part, imposed by server)
        type: array
        items:
          $ref: "#/definitions/SimulationPart"
      performSupportOptimization:
        type: boolean
      generateSupportVoxels:
        type: boolean
      outputLayerVtk:
        type: boolean
        description: if true, mechanics solver output will include a zip file with the stress / distortion state at the end of each voxel layer
      performDistortionCompensation:
        type: boolean
        description: if true, a predistorted STL file will be created using the distortion simulated by the mechanics solver
      distortionScaleFactor:
        type: number
        description: a value that is used to scale the simulated distortion value
      outputSupportsVtk:
        type: boolean
        description: if true, a VTK file of the support structure will be created
      detectSupportFailure:
        type: boolean
      supportFailureThreshold:
        type: number
        description: should be a number between 0.5 and 1.5

  ScanPatternSimulation:
    allOf:
      - $ref: "#/definitions/Simulation"
      - $ref: "#/definitions/ScanPatternSimulationParameters"

  Part:
    type: object
    required:
      - id
      - organizationId
      - name
    properties:
      id:
        type: integer
        format: int32
        description: Id of the part
      organizationId:
        type: integer
        format: int32
        description: Id of the organization that owns this part record
      name:
        type: string
      originalFileName:
        type: string
        description: The original file name from the user
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      fileLocation:
        type: string
        description:  Remote path (s3 key) of part. (read only).
      availability:
        description: Describes the availabity of the part. Uploaded - the part has been uploaded.  Processing - the part
          is being processed.  Available - the part was processed successfully and can be used in simulations.  Error -
          an error occurred, contact support@3dsim.com.
        type: string
        enum:
          - Uploaded
          - Processing
          - Available
          - Error
      archived:
        description: Designates whether this entity has been archived.
        type: boolean
      xMin:
        type: number
        description: x location (in meters) where the lower left corner of the bounding box of the part will be placed on the bed, calculated when the part is processed, use 0 for initial post
      yMin:
        type: number
        description: y location (in meters) where the lower left corner of the bounding box of the part will be placed on the bed, calculated when the part is processed, use 0 for initial post
      zMin:
        type: number
        description: z location (in meters) where the lower left corner of the bounding box of the part will be placed on the bed, calculated when the part is processed, use 0 for initial post
      sizeX:
        type: number
        description: Width of the Part bounding box (in meters), calculated when the part is processed, use 0 for initial post
      sizeY:
        type: number
        description: Length of the Part bounding box (in meters), calculated when the part is processed, use 0 for initial post
      sizeZ:
        type: number
        description: Height of the Part bounding box (in meters), calculated when the part is processed, use 0 for initial post
      originalX:
        type: number
        description: The smallest x location before transformation
      originalY:
        type: number
        description: The smallest y location before transformation
      originalZ:
        type: number
        description: The smallest z location before transformation
      triangleCount:
        type: integer
        format: int32
        description: Number of triangles in the original STL file, calculated when the part is processed, use 0 for initial post
      volume:
        type: number
        description: Approximate volume of the Part (in meters^3), calculated when the part is processed, use 0 for initial post
      created:
        type: string
        format: date-time
        description: created time stamp, set server-side, read only
      createdBy:
        type: string
        description: assigned user, set server-side, read only
      lastModified:
        type: string
        format: date-time
        description: last modified time stamp, set server-side, read only
      lastModifiedBy:
        type: string
        description: assigned user, set server-side, read only
      supportVolume:
        type: number
      elements:
        type: integer
        format: int32
      nodes:
        type: integer
        format: int32
      collapseCost:
        type: number
      surfaceArea:
        type: number
      estimatedMemory:
        type: integer
        format: int32
        description: Estimated memory usage for mechanics solver using estimateVoxelSize
      maxMemory:
        type: integer
        format: int32
        description: Estimated max memory usage for mechanics solver using estimateVoxelSize
      estimatedWork:
        type: integer
        format: int32
        description: Estimated work using estimateVoxelSize
      estimateVoxelSize:
        type: number
        description: Voxel size used for estimatedMemory, maxMemory, estimatedWork


  PartPost:
    type: object
    required:
      - organizationId
      - name
      - fileLocation
    properties:
      organizationId:
        type: integer
        format: int32
        description: Id of the organization that owns this part record
      name:
        description: Name of the part, max 50 characters
        type: string
      description:
        description: Free form description of the part, max 2048 characters
        type: string
      tags:
        type: array
        description: Tags can be used for any purpose. Max length of serialized json is 256 characters.
        items:
          type: string
      fileLocation:
        type: string
        description: Remote s3 key of a newly uploaded stl file.  Use parts/geometryurl endpoint to upload the part before calling POST.  Max length 256 characters.

  Material:
    type: object
    required:
      - id
      - isCore
      - organizationId
      - name
      - archived
      - key
      - version
      - configurationId
      - created
      - createdBy
      - lastModified
      - lastModifiedBy
    properties:
      id:
        type: integer
        format: int32
        description: item identifier
      isCore:
        type: boolean
        description: flag whether it is a core material or a custom material
      organizationId:
        type: integer
        format: int32
        description: organization identifier
      name:
        type: string
        description: material name
        maxLength: 128
      description:
        type: string
        description: material description
        maxLength: 2048
      archived:
        type: boolean
        description: false if not archived, true if archived
      key:
        type: string
        description: key associated with this material.  e.g. Ti64
        maxLength: 16
      version:
        type: string
        description: version label
        maxLength: 16
      configurationId:
        type: integer
        format: int32
        description: identifier for the active configuration for this material
      configuration:
        $ref: "#/definitions/MaterialConfiguration"
      configurationHistory:
        type: array
        items:
          $ref: '#/definitions/MaterialConfiguration'
      created:
        type: string
        format: date-time
        description: created time stamp, set server-side, read only field
      createdBy:
        type: string
        description: creating user, set server-side, read only field
      lastModified:
        type: string
        format: date-time
        description: last modified time stamp, set server-side, read only field
      lastModifiedBy:
        type: string
        description: modifying user, set server-side, read only field

  MaterialConfiguration:
    type: object
    required:
      - materialId
      - version
      - created
      - createdBy
      - meanFreePathOfLaserInPowder
      - meanFreePathOfLaserInBulk
      - powderToSolidThermalConductivityRatio
      - powderToSolidSpecificHeatRatio
      - powderToSolidDensityRatio
      - solidThermalConductivityAtRoomTemperature
      - solidDensityAtRoomTemperature
      - solidSpecificHeatAtRoomTemperature
      - vaporizationLatentHeat
      - fusionLatentHeat
      - purgingGasConvectionCoefficient
      - solidusTemperature
      - liquidusTemperature
      - vaporizationTemperature
      - vaporizationStartTemperature
      - solidStateTransitionTemperature
      - energyAbsorbingRateByPowder
      - energyAbsorbingRateBySolid
      - thermalExpansionCoefficient
      - elasticModulus
      - elasticModulusOfBase
      - poissonRatio
      - materialYieldStrength
      - supportYieldStrengthRatio
      - materialStrainSensitivity
      - surfaceTension
      - atomicWeight
      - assumedStrain
      - strainPlasticityRelaxationFactor
      - anisotropicStrainCoefficientParallel
      - anisotropicStrainCoefficientPerpendicular
      - anisotropicStrainCoefficientZ
    properties:
      id:
        type: integer
        format: int32
        description: material configuration identifier
      materialId:
        type: integer
        format: int32
        description: material identifier for this material configuration
      version:
        type: string
        description: version label for the material configuration
        maxLength: 16
      created:
        type: string
        format: date-time
        description: created time stamp, set server-side, read only field
      createdBy:
        type: string
        description: creating user, set server-side, read only field
      meanFreePathOfLaserInPowder:
        type: number
        format: double
      meanFreePathOfLaserInBulk:
        type: number
        format: double
      powderToSolidThermalConductivityRatio:
        type: number
        format: double
      powderToSolidSpecificHeatRatio:
        type: number
        format: double
      powderToSolidDensityRatio:
        type: number
        format: double
      solidThermalConductivityAtRoomTemperature:
        type: number
        format: double
      solidDensityAtRoomTemperature:
        type: number
        format: double
      solidSpecificHeatAtRoomTemperature:
        type: number
        format: double
      vaporizationLatentHeat:
        type: number
        format: double
      fusionLatentHeat:
        type: number
        format: double
      purgingGasConvectionCoefficient:
        type: number
        format: double
      solidusTemperature:
        type: number
        format: double
      liquidusTemperature:
        type: number
        format: double
      vaporizationTemperature:
        type: number
        format: double
      vaporizationStartTemperature:
        type: number
        format: double
      solidStateTransitionTemperature:
        type: number
        format: double
      energyAbsorbingRateByPowder:
        type: number
        format: double
      energyAbsorbingRateBySolid:
        type: number
        format: double
      thermalExpansionCoefficient:
        type: number
        format: double
      elasticModulus:
        type: number
        format: double
      elasticModulusOfBase:
        type: number
        format: double
      poissonRatio:
        type: number
        format: double
      materialYieldStrength:
        type: number
        format: double
      supportYieldStrengthRatio:
        type: number
        format: double
      materialStrainSensitivity:
        type: number
        format: double
      surfaceTension:
        type: number
        format: double
      atomicWeight:
        type: number
        format: double
      assumedStrain:
        type: number
        format: double
      strainPlasticityRelaxationFactor:
        type: number
        format: double
      anisotropicStrainCoefficientParallel:
        type: number
        format: double
      anisotropicStrainCoefficientPerpendicular:
        type: number
        format: double
      anisotropicStrainCoefficientZ:
        type: number
        format: double
      lookupFileLocation:
        type: string
        description: Location where the lookup file is stored in S3.  Set server side.  Only used internally within 3DSIM.

  MachineConfiguration:
    type: object
    required:
      - machineId
      - created
      - createdBy
      - hatchSpacing
      - beamDiameter
      - laserWattage
      - laserWaveLength
      - scanSpeed
      - timeDiscretizationDuringScanning
      - coolingToScanningTimeIncrementRatio
      - totalCoolingTime
      - heaterTemperature
    properties:
      id:
        type: integer
        format: int32
        description: machine configuration identifier
      machineId:
        type: integer
        format: int32
        description: machine identifier for this machine configuration
      created:
        type: string
        format: date-time
        description: created time stamp, set server-side, read only field
      createdBy:
        type: string
        description: creating user, set server-side, read only field
      hatchSpacing:
        description: distance between hatch lines in meters
        type: number
        minimum: 0.00001
        maximum: 0.002
        format: double
      beamDiameter:
        description: diameter of laser beam in meters
        type: number
        minimum: 0
        maximum: 0.0001
        format: double
      laserWattage:
        description: laser power in watts
        type: number
        minimum: 0
        maximum: 1000
        format: double
      laserWaveLength:
        description: laser light wavelength in meters
        type: number
        minimum: 0
        maximum: 0.00001
        format: double
      scanSpeed:
        description: speed at which laser travels in meters per second
        type: number
        minimum: 0.01
        maximum: 10
        format: double
      timeDiscretizationDuringScanning:
        description: calculation time interval in seconds
        type: number
        minimum: 0
        maximum: 10
        format: double
      coolingToScanningTimeIncrementRatio:
        description: ratio between cooling to scanning time
        type: number
        minimum: 0
        maximum: 100
        format: double
      totalCoolingTime:
        description: cooling time prior to deposition of next powder layer in seconds
        type: number
        minimum: 0
        maximum: 10
        format: double
      heaterTemperature:
        description: heater temperature in degrees kelvin
        type: number
        minimum: 0
        maximum: 1000
        format: double

  Machine:
    type: object
    required:
      - id
      - isCore
      - organizationId
      - name
      - archived
      - key
      - configurationId
      - created
      - createdBy
      - lastModified
      - lastModifiedBy
    properties:
      id:
        type: integer
        format: int32
        description: machine identifier
      isCore:
        type: boolean
        description: flag whether it is a core machine or a custom machine
      organizationId:
        type: integer
        format: int32
        description: organization identifier
      name:
        type: string
        description: machine name
        maxLength: 128
      description:
        type: string
        description: machine description
        maxLength: 2048
      archived:
        type: boolean
        description: false if not archived, true if archived
      key:
        type: string
        description: key associated with this machine
        maxLength: 16
      configurationId:
        type: integer
        format: int32
        description: identifier for the active configuration for the machine
      configuration:
        $ref: "#/definitions/MachineConfiguration"
      configurationHistory:
        type: array
        items:
          $ref: '#/definitions/MachineConfiguration'
      created:
        type: string
        format: date-time
        description: created time stamp, set server-side, read only field
      createdBy:
        type: string
        description: creating user, set server-side, read only field
      lastModified:
        type: string
        format: date-time
        description: last modified time stamp, set server-side, read only field
      lastModifiedBy:
        type: string
        description: modifying user, set server-side, read only field

  PartUploadRequest:
    properties:
      signedUrl:
        type: string
      s3Key:
        type: string

  PartGeometryUrl:
    properties:
      signedUrl:
        type: string

  Triangle:
    properties:
      normal:
        type: object
        properties:
          angle:
            type: number
            format: double
          x:
            type: number
            format: double
          'y':
            type: number
            format: double
          z:
            type: number
            format: double
      vertices:
        type: array
        items:
          $ref: '#/definitions/Vertex'

  Vertex:
    properties:
      x:
        type: number
        format: double
      'y':
        type: number
        format: double
      z:
        type: number
        format: double

  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  PatchDocument:
    description: A JSONPatch document as defined by RFC 6902
    required:
     - "op"
     - "path"
    properties:
     op:
      type: string
      description: The operation to be performed
      enum:
       - "add"
       - "remove"
       - "replace"
       - "move"
       - "copy"
       - "test"
     path:
      type: string
      description: A JSON-Pointer
     value:
      type: object
      description: The value to be used within the operations.
     from:
      type: string
      description: A string containing a JSON Pointer value.

  SimulationEstimate:
    description: contains an estimate (in minutes) for running an assumed strain simulation
    required:
      - partId
      - estimate
      - type
    properties:
      partId:
        type: number
      estimate:
        type: number
      type:
        type: string
      description:
        type: string
        description: If the estimate is 0, the description field will contain information on why an estimate could not be calculated

  SelectedPoint:
    description: describes a point
    required:
      - label
      - simulationId
      - x
      - 'y'
      - z
    properties:
      id:
        type: number
      simulationId:
        type: number
      label:
        type: string
      x:
        type: number
      'y':
        type: number
      z:
        type: number
