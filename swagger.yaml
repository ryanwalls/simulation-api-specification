swagger: "2.0"
info:
  version: 1.0.1
  title: Simulation API
  description: An API for managing simulations within 3DSIM.
  termsOfService: https://3dsim.com
  contact:
    name: 3DSIM API Team
    email: support@3dsim.com
    url: https://3dsim.github.io
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: 3dsim.cloud.tyk.io
basePath: /simulation-api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /status:
    get:
      description: |
        Use this endpoint to check server status.
      operationId: status
      responses:
        200:
          description: status response
          schema:
            $ref: '#/definitions/Status'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /materials:
    get:
      description: Get list of materials
      operationId: getMaterials
      parameters:
        - name: offset
          in: query
          description: starting paging count; ex. 60 will skip the first 60 materials in the list
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: number of materials to return within the query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: key:direction pairs for one or multiple field sort orders
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: search
      responses:
        "200":
          description: Successfully found a list of materials available to the requestor
          schema:
            type: array
            items:
              $ref: '#/definitions/Material'
        "403":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new material for the organizationId specified
      operationId: addMaterial
      parameters:
        - name: material
          in: body
          description: Material to add
          required: true
          schema:
            $ref: '#/definitions/Material'
      responses:
        "200":
          description: material response
          schema:
            $ref: '#/definitions/Material'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /materials/{id}:
    get:
      description: Returns a material based on a single ID
      operationId: findMaterialById
      parameters:
        - name: id
          in: path
          description: ID of material to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: material response
          schema:
            $ref: '#/definitions/Material'
        "404":
          description: Material not found
        "403":
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: archives a single material based on the ID supplied
      operationId: deleteMaterial
      parameters:
        - name: id
          in: path
          description: ID of material to archived
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: material that has been archived with active field cleared
        "404":
          description: Material not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /parts:
    get:
      description: Get list of parts
      operationId: getParts
      responses:
        200:
          description: Successfully found the list of parts
          schema:
            type: array
            items:
              $ref: '#/definitions/Part'
        403:
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /machines:
    get:
      description: Get list of machines
      operationId: getMachines
      responses:
        200:
          description: Successfully retrieved list of machines
          schema:
            type: array
            items:
              $ref: '#/definitions/Machine'
        403:
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
# Should put perform updates?
      description: Add a machine if it doesn't already exist
      operationId: putMachine
      responses:
        200:
          description: Machine was successfully added or already exists
          schema:
            $ref: '#/definitions/Machine'
        403:
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
   post:
      description: Add a machine
      operationId: postMachine
      responses:
        200:
          description: Machine was successfully added
          schema:
            $ref: '#/definitions/Machine'
        403:
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
   delete:
      description: Delete a machine
      operationId: deleteMachine
      responses:
        200:
          description: Machine was successfully removed or was not found
          schema:
            $ref: '#/definitions/Machine'
        403:
          description: Not authorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  # /machines/[id]: Do we need this for updating machine parameters and/or retrieving a single machine?
definitions:
  Status:
    properties:
      status:
        type: string
        enum:
          - okay
          - problem
          - slow
      message:
        type: string
  Material:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      key:
        type: string
      description:
        type: string
      organizationId:
        type: integer
      active:
        type: boolean
      scientificProperties:
        type: object
        properties:
          meanFreePathOfLaserInPowder:
            type: double
          meanFreePathOfLaserInBulk:
            type: double
          powderToSolidThermalConductivityRatio:
            type: double
          powderToSolidSpecificHeatRatio:
            type: double
          powderToSolidDensityRatio:
            type: double
          solidThermalConductivityAtRoomTemperature:
            type: double
          solidDensityAtRoomTemperature:
            type: double
          solidSpecificHeatAtRoomTemperature:
            type: double
          vaporizationLatentHeat:
            type: double
          fusionLatentHeat:
            type: double
          purgingGasConvectionCoefficient:
            type: double
          solidusTemperature:
            type: double
          liquidusTemperature:
            type: double
          vaporizationTemperature:
            type: double
          vaporizationStartTemperature:
            type: double
          solidStateTransitionTemperature:
            type: double
          energyAbsorbingRateByPowder:
            type: double
          energyAbsorbingRateBySolid:
            type: double
          thermalExpansionCoefficient:
            type: double
          elasticModulus:
            type: double
          elasticModulusOfBase:
            type: double
          poissonRatio:
            type: double
          materialStrengthYield:
            type: double
          supportYieldStrengthRatio:
            type: double
          materialStrainSensitivity:
            type: double
          surfaceTension:
            type: double
          atomicWeight:
            type: double
          assumedStrain:
            type: double
          strainPlasticityRelaxationFactor:
            type: double
          anisotropicStrainCoefficients:
            type: double
  Part:
    type: object
    properties:
      id:
        type: integer
      customerId:
        type: integer
      name:
        type: string
      partFileLocation:
        type: string
      status:
        type: integer
      locationX:
        type: number
      locationY:
        type: number
      sizeX:
        type: number
      sizeY:
        type: number
      sizeZ:
        type: number
      numberOfTriangles:
        type: integer
      volume:
        type: number
      createdDate:
        type: string
        format: dateTime
      createdBy:
        type: integer
      lastModifiedDate:
        type: string
        format: dateTime
      lastModifiedBy:
        type: integer
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  Machine:
    type: object
    properties:
      id:
        type: integer
      # customerId: - doesn't currently exist but needed for custom machine
      #   type: integer
      name:
        type: string
      description:
        type: string
      imageLarge: assets/images/machines/eos_list.jpg
        type: string
      imageSmall: assets/images/machines/eos_list.jpg
        type: string
      properties:
        type: object
        hatchSpacing:
          type: number
          format: double
        beamDiameter:
          type: number
          format: double
        laserWattage:
          type: integer
        laserWaveLength:
          type: number
          format: double
        scanSpeed:
          type: integer
        timeDiscretizationDuringScaning:
          type: number
          format: double
        coolingToScanningTimeIncrementRatio:
          type: integer
        totalCoolingTime:
          type: number
          format: double
        heaterTemperature:
          type: integer
        available:
          type: boolean
        key:
          type: string
        version:
          type: string
        createdDate:
          type: string
          format: date-time
        createdBy:
          type: integer
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: integer
